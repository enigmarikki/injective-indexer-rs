version: '3'

services:
  # Your Rust application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Connect to the injective-core container's ports as exposed on the host
      - GRPC_STREAM_ENDPOINT=http://host.docker.internal:1999
      - GRPC_QUERY_ENDPOINT=http://host.docker.internal:1900
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=injective-data
      - KAFKA_CLIENT_ID=injective-client
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app-network
    # Add extra_hosts to make host.docker.internal work on Linux
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Kafka service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8001:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=injective-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app-network
networks:
  app-network:
    driver: bridge